<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Yuhao&#39;s Blog</title>
    <link>https://yuhaolu.github.io/posts/</link>
    <description>Recent content in Posts on Yuhao&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Mar 2025 15:40:03 -0700</lastBuildDate>
    <atom:link href="https://yuhaolu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Eraser: A Dynamic Data Race Detector for Multithreaded Programs</title>
      <link>https://yuhaolu.github.io/posts/cs/os_eraser/</link>
      <pubDate>Sun, 09 Mar 2025 15:40:03 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/cs/os_eraser/</guid>
      <description>Eraser: A Dynamic Data Race Detector for Multithreaded Programs Multithreaded programming is difficult and error prone.&#xA;Eraser, dynamically detecting data races in lock-based multithreded programs&#xA;Eraser uses binary rewriting techiniques to monitor every shared-memory reference and verify consistent locking&#xA;1. Introduction Debugging a multithreaded program can be difficult.&#xA;Timing dependences may make the bug difficult to reproduce. What is worse, the instrumentation peope insert to help them find the bugs may change the timing in such a way that the bug never shows up.</description>
    </item>
    <item>
      <title>Efficiency Tips for Engineers</title>
      <link>https://yuhaolu.github.io/posts/misc/efficiency_tips/</link>
      <pubDate>Sat, 20 Jul 2024 10:36:08 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/misc/efficiency_tips/</guid>
      <description>Ref: https://www.youtube.com/watch?v=b33vqX74EcA (Talk given by Mo Tiwari)&#xA;Things to know in 20s Determine what&amp;rsquo;s important On your deathbed, what do you want to say you have done? Write down your goals, and stick them on your desk Spend time with friends and family Exercise Finish your work project Everything else, cut as much as possible Profile your time You would run a profiler to see where code spends its time Profile yourself!</description>
    </item>
    <item>
      <title>Hashing</title>
      <link>https://yuhaolu.github.io/posts/algo/hashing/</link>
      <pubDate>Sat, 13 Jul 2024 01:10:32 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/algo/hashing/</guid>
      <description>Abstract Data Structure interface is like a contract that specifies how we can interact with the data structure - what operations we can perform on it, what inputs it expects, and what outputs we can expect.&#xA;implementation is the code that actually makes the data structure work.&#xA;Hashing Function A hash function is a function that takes an input and deterministically converts it to an integer that is less than a fixed size set by the programmer.</description>
    </item>
    <item>
      <title>RDMA Programming</title>
      <link>https://yuhaolu.github.io/posts/networks/rdma_nvidia/</link>
      <pubDate>Fri, 05 Jul 2024 16:09:21 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/networks/rdma_nvidia/</guid>
      <description>Ref: https://www.coursera.org/learn/the-fundamentals-of-rdma-programming&#xA;1. RDMA Bypassing OS Traditionally, most socket application uses the socket API, for example, connect, accept, send and receive. All our functions are used to pass data from one point to another.&#xA;Client connect() send() recv() Server accept() send() recv() RDMA programming is an alternative to socket programming. It gives you better latency and better utilization of your hardware if you have network interface cards that can work with it.</description>
    </item>
    <item>
      <title>Machine Learning</title>
      <link>https://yuhaolu.github.io/posts/cs/ml_stanford/</link>
      <pubDate>Sat, 29 Jun 2024 15:19:36 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/cs/ml_stanford/</guid>
      <description>Machine Learning Ref: https://www.coursera.org/learn/machine-learning&#xA;Mimic human learning process of generating output based on specified inputs, like a turning machine&#xA;Supervised Machine Learning Regression and Classification&#xA;Linear regression logistic regression gradient descent Neural Network Problem: high training error - high bias&#xA;Solution: consider more features -&amp;gt; use larger neural network&#xA;Problem: high correlation error - high variance&#xA;Solution: cut weights of some features -&amp;gt; use more data&#xA;Understanding comes from talent &amp;amp; intelligence, Deduction comes from learning &amp;amp; experience</description>
    </item>
    <item>
      <title>Array and Strings</title>
      <link>https://yuhaolu.github.io/posts/algo/array_n_strings/</link>
      <pubDate>Sat, 11 May 2024 11:27:22 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/algo/array_n_strings/</guid>
      <description>Ref: https://leetcode.com/explore/interview/card/leetcodes-interview-crash-course-data-structures-and-algorithms&#xA;1. Arrays C++ require you to specify the size and data type of the array during initialization but also have support for lists (like std::vector in C++).&#xA;2. Strings Strings are implemented differently between languages. In Python and Java, they are immutable. In C++, they are mutable.&#xA;Mutable or immutable? If you have a mutable array arr = [&amp;ldquo;a&amp;rdquo;, &amp;ldquo;b&amp;rdquo;, &amp;ldquo;c&amp;rdquo;] and an immutable string s = &amp;ldquo;abc&amp;rdquo;, but you want to instead represent &amp;ldquo;abd&amp;rdquo;, you can easily do arr[2] = &amp;ldquo;d&amp;rdquo;, but you cannot do s[2] = &amp;ldquo;d&amp;rdquo;.</description>
    </item>
    <item>
      <title>Tree and Graphs</title>
      <link>https://yuhaolu.github.io/posts/algo/tree_n_graphs/</link>
      <pubDate>Sat, 11 May 2024 11:27:22 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/algo/tree_n_graphs/</guid>
      <description>Ref: https://leetcode.com/explore/interview/card/leetcodes-interview-crash-course-data-structures-and-algorithms/707/traversals-trees-graphs/&#xA;1. Binary trees A binary tree is a collection of nodes. Every node has between 0 to 2 children, and every node except the root has exactly one parent.&#xA;struct { int val; TreeNode *left; TreeNode *right; TreeNode(int val) : val(val), left(nullptr), right(nullptr) {} }; TreeNode(3); 2. Traversal 2.1 Depth-first search (DFS) In a DFS, we prioritize depth by traversing as far down the tree as possible in one direction (until reaching a leaf node) before considering the other direction.</description>
    </item>
    <item>
      <title>About Me</title>
      <link>https://yuhaolu.github.io/posts/about/</link>
      <pubDate>Sat, 04 May 2024 21:36:02 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/about/</guid>
      <description>Hello, welcome to my Blog.&#xA;I am a senior engineer at Qualcomm working on system level test of AI laptop processor and premium tier mobile phone chipsets.&#xA;This is a place where I note down my thoughts and learning process of new technologies. Most of the blog posts will focus on computing algorithms, system optimizations and communication networks.&#xA;If you have any questions, feel free to reach me at:&#xA;Email: yuhao.</description>
    </item>
  </channel>
</rss>
