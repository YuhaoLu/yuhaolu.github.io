<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OS on Yuhao&#39;s Blog</title>
    <link>https://yuhaolu.github.io/tags/os/</link>
    <description>Recent content in OS on Yuhao&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Mar 2025 15:40:03 -0700</lastBuildDate>
    <atom:link href="https://yuhaolu.github.io/tags/os/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Eraser: A Dynamic Data Race Detector for Multithreaded Programs</title>
      <link>https://yuhaolu.github.io/posts/cs/os_eraser/</link>
      <pubDate>Sun, 09 Mar 2025 15:40:03 -0700</pubDate>
      <guid>https://yuhaolu.github.io/posts/cs/os_eraser/</guid>
      <description>Eraser: A Dynamic Data Race Detector for Multithreaded Programs Multithreaded programming is difficult and error prone.&#xA;Eraser, dynamically detecting data races in lock-based multithreded programs&#xA;Eraser uses binary rewriting techiniques to monitor every shared-memory reference and verify consistent locking&#xA;1. Introduction Debugging a multithreaded program can be difficult.&#xA;Timing dependences may make the bug difficult to reproduce. What is worse, the instrumentation peope insert to help them find the bugs may change the timing in such a way that the bug never shows up.</description>
    </item>
  </channel>
</rss>
